' Module 2 - Challenge Assignment' Stock Analysis - v1.0 -20230924' Author = Adrian Santos'' The purpose of this script is to evaluate and summarise stock data for an entire year' For each ticker symbol, the script calculates the change in price over the year and also the percent change of EOY closing price to opening price at the start of the year' The script uses visual cues (colours, and parenthis that indicate negative values) to report increases and decreases over the year. Given volume figures are reformatted for readability.' A final summary of (1) the greatest percentage gain, (2) the greatest loss by percentage, and (3) The greatest total value in volume. The ticker symbol accompanies the summary values' Every worksheet/tab will be evaluated with its accompanying results. This script need be run only one time.Sub Stock_Analysis()'Set up to loop through all worksheets in ths workbook    Dim ws_count As Integer    Dim ws_loop As Integer    'Count number of worksheets in active Workbook    ws_count = ActiveWorkbook.Worksheets.Count    'Create the loop for all worksheets to be processedFor ws_loop = 1 To ws_count' Activate the workbook to process     Worksheets(ws_loop).Activate' Create labels for headers in summary section    Range("I1").Value = "Ticker"    Range("J1").Value = "Yearly Change"    Range("K1").Value = "Percent Change"    Range("L1").Value = "Total Stock Volume"    'Determine last_row_num in dataset    Dim last_row_num As Long    last_row_num = Range("$A:$A").SpecialCells(xlCellTypeLastCell).Row    'Determine summary_row_num for keeping track of summary output    Dim summary_row_num As Double    summary_row_num = 1        ' Define variables used in script for output --  this at beginning to zero out previous variables        Dim price_start_open As Double            'Opening price at beginning of year    Dim price_end_close As Double             'Closing price at end of year        Dim price_yearly_change As Double       'delta in price from end to beg of year        Dim price_pct_change As Double           'percent of change --   = price_yearly_change /price_start_open        Dim cuml_volume As Double                  'cumulative total of volume    cuml_volume = 0    'Format columns to number & percents    Range("$G:$G").NumberFormat = "###,###,###,###,##0"    Range("$K:$K").NumberFormat = "###,##0.00% ; (###,##0.00%)"    Range("$Q$2:$Q$3").NumberFormat = "###,##0.00% ; (###,##0.00%)"     'Create loop to determine whether to: (1) reset to zero (for a new ticker) or (2) to evaluate continuing row of same ticker    Dim i As Double                  'counter for evaluating all rows   'Creates loop to evaluate all rows of dataset    For i = 2 To last_row_num   'Checks to see if above ticker is the same, or if this is different and therefore requires reset and handling    If Cells(i - 1, 1).Value <> Cells(i, 1).Value Then         'This is a new ticker    ticker_symbol = Cells(i, 1).Value    'Increase the summary_row_num for the new ticker in the summary section    summary_row_num = summary_row_num + 1        'Adds new ticker_symbol to summary section    Cells(summary_row_num, 9).Value = Cells(i, 1).Value    'Resets the values used to first value for the new ticker    price_start_open = Cells(i, 3).Value    price_end_close = 0    price_yearly_change = 0    price_pct_change = 0    cuml_volume = Cells(i, 7).Value        End If     'This is for when ticker above = current ticker = ticker below -- this is an intermediate row to evaluate    If Cells(i - 1, 1).Value = Cells(i, 1).Value And Cells(i + 1, 1).Value = Cells(i, 1).Value Then                'Add this day's volume to cumulative volume            cuml_volume = cuml_volume + Cells(i, 7).Value                End If      'This is for when ticker below <> current ticker. This indicates the last row for this ticker, and final calculations completed and displayed   If Cells(i + 1, 1).Value <> Cells(i, 1).Value Then                   'Add this final day's volume to cumulative volume -- this is the last of its ticker_symbol, the next row is different            cuml_volume = cuml_volume + Cells(i, 7).Value                        'Extract closing price for EOY for current ticker            price_end_close = Cells(i, 6).Value                        'Determine Yearly change in price from year-end closing to opening price at the beginning of the year            price_yearly_change = price_end_close - price_start_open                         'Determine Yearly percent change in price from year-end closing to opening price at the beginning of the year            price_pct_change = price_yearly_change / price_start_open                        'Populate summary cells with values            Cells(summary_row_num, 10).Value = FormatNumber(price_yearly_change, 2, True)            Cells(summary_row_num, 10).NumberFormat = "0.00;(0.00)"            Cells(summary_row_num, 11).Value = FormatPercent(price_pct_change, 2, vbTrue, vbTrue, vbUseDefault) 'this is not acting as expected            Cells(summary_row_num, 12).Value = FormatNumber(Fix(cuml_volume), 0, True)                                 'Format Yearly Changed & Percent Changed Percent Columns           If price_yearly_change <= 0 Then Cells(summary_row_num, 10).Interior.ColorIndex = 3           If price_yearly_change > 0 Then Cells(summary_row_num, 10).Interior.ColorIndex = 4                      If price_pct_change <= 0 Then Cells(summary_row_num, 11).Interior.ColorIndex = 3           If price_pct_change > 0 Then Cells(summary_row_num, 11).Interior.ColorIndex = 4    End If        Next i        '--------------------------------------------- 'This section focuses on the second summary section'Create labels for headers in secondary summary section for highest and lowest percent change    Range("P1").Value = "Ticker"    Range("Q1").Value = "Value"    Range("O2").Value = "Greatest % Increase"    Range("O3").Value = "Greatest % Decrease"    Range("O4").Value = "Greatest Total Volume" 'Find tickers and percentage change that are max and min for price_pct_change     Dim min_price_pct_change As Double    Dim min_price_pct_ticker As String    min_price_pct_change = 0     Dim max_price_pct_change As Double    Dim max_price_pct_ticker As String    max_price_pct_change = 0     Dim max_total_volume As Double    Dim max_volume_ticker As String    max_total_volume = 0      'Determine last_row_num in summarised dataset    Dim summary_last_row_num As Double    summary_last_row_num = Cells(1, 9).End(xlDown).Row    'For loop to evaluate all of the summary data to determine max & min    For i = 2 To summary_last_row_num        'Determine (1 of 3 ):  Is this percent_changed < than the min_price_pct_change -- making the current new low    If Cells(i, 11).Value < min_price_pct_change Then min_price_pct_ticker = Cells(i, 9).Value    If Cells(i, 11).Value < min_price_pct_change Then min_price_pct_change = Cells(i, 11).Value        'Determine (2 of 3 ):  Is this percent_changed > than the max_price_pct_change -- making the current new max    If Cells(i, 11).Value > max_price_pct_change Then max_price_pct_ticker = Cells(i, 9).Value    If Cells(i, 11).Value > max_price_pct_change Then max_price_pct_change = Cells(i, 11).Value     'Determine (3 of 3 ):  Is this total volume > than the max_total_volume -- making the current new max volume    If Cells(i, 12).Value > max_total_volume Then max_volume_ticker = Cells(i, 9).Value    If Cells(i, 12).Value > max_total_volume Then max_total_volume = Cells(i, 12).ValueNext i    'This section populates secondary summary values in grid before moving to next Worksheet    Range("P2").Value = max_price_pct_ticker    Range("Q2").Value = FormatPercent(max_price_pct_change)    Range("P3").Value = min_price_pct_ticker    Range("Q3").Value = FormatPercent(min_price_pct_change)    Range("Q4").Value = FormatNumber(Fix(max_total_volume), 0, True)    Range("P4").Value = max_volume_ticker'Resize column widths to Auto Fit to display values correctly    Columns("$A:$Q").AutoFit    'Send cursor to Cell Ref: A1 -- keeps it at the top of each worksheet for ease of use    Range("A1").SelectNext ws_loop' Bring the first worksheet to the front as final step -- makes it easy to begin further analysis     Worksheets(1).ActivateEnd Sub